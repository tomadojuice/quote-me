name: Publish Package

on:
  release:
    types: [published]

permissions:
  contents: read
  packages: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install dependencies
        run: npm ci

      - name: Run tests (if available)
        run: |
          if npm run test --silent 2>/dev/null; then
            echo "Running tests..."
            npm run test
          else
            echo "No test script found, skipping tests"
          fi

      - name: Configure package for GitHub registry
        run: |
          # Update package name to include scope for GitHub registry
          npm pkg set name="@${{ github.repository_owner }}/quote-me"
          
          # Set registry and publishConfig
          npm pkg set publishConfig.registry="https://npm.pkg.github.com"
          npm pkg set repository.type="git"
          npm pkg set repository.url="git+https://github.com/${{ github.repository }}.git"

      - name: Set version from release tag
        run: |
          # Use the release tag as version (remove 'v' prefix if present)
          RELEASE_VERSION="${{ github.event.release.tag_name }}"
          CLEAN_VERSION=${RELEASE_VERSION#v}
          npm version $CLEAN_VERSION --no-git-tag-version
          echo "Publishing version: $CLEAN_VERSION"

      - name: Publish to GitHub Package Registry
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create summary
        run: |
          PACKAGE_NAME=$(npm pkg get name | tr -d '"')
          PACKAGE_VERSION=$(npm pkg get version | tr -d '"')
          
          echo "## ðŸ“¦ Package Published Successfully" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Package**: \`${PACKAGE_NAME}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: \`${PACKAGE_VERSION}\`" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: Release ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Registry**: GitHub Package Registry" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Installation" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
          echo "npm install ${PACKAGE_NAME}@${PACKAGE_VERSION}" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY